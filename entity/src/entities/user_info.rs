//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.14

use super::sea_orm_active_enums::Gender;
use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "user_info")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i64,
    pub username: String,
    pub password: String,
    pub first_name: Option<String>,
    pub last_name: Option<String>,
    pub birthday: Option<Date>,
    pub gender: Option<Gender>,
    pub email: Option<String>,
    pub phone: Option<String>,
    pub create_time: Option<DateTimeWithTimeZone>,
    pub update_time: Option<DateTimeWithTimeZone>,
    pub latest_login_time: Option<DateTimeWithTimeZone>,
    pub online: Option<bool>,
    #[sea_orm(unique)]
    pub neo4j_id: Option<i64>,
    #[sea_orm(column_type = "JsonBinary", nullable)]
    pub extra: Option<Json>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {}

impl ActiveModelBehavior for ActiveModel {}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelatedEntity)]
pub enum RelatedEntity {}
