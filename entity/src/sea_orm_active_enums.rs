//! `SeaORM` Entity, @generated by sea-orm-codegen 1.0.0

use sea_orm::entity::prelude::*;

#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum)]
#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "gender")]
pub enum Gender {
    #[sea_orm(string_value = "female")]
    Female,
    #[sea_orm(string_value = "male")]
    Male,
}

impl Gender {
    pub fn from_str(s: &str) -> Option<Self> {
        match s {
            "female" => Some(Self::Female),
            "male" => Some(Self::Male),
            _ => None
        }
    }

    pub fn to_str(&self) -> String {
        match self {
            Gender::Female => "famale".to_owned(),
            Gender::Male => "male".to_owned(),
        }
    }
}
