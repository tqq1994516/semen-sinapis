[package]
name = "semen-sinapis"
version = "0.1.0"
edition = "2021"

[profile.dev.build-override]
debug = true

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html
[workspace]
resolver = "2"
members = [
    "entity",
    "layer",
    "macros",
    "migration",
    "utils",
    "volo-gen",
    "person-center",
    "frontend-base-service",
    "idgen",
    "pool",
]

[lib]
crate-type = ["cdylib", "rlib"]

[[bin]]
name = "person-center"
path = "person-center/src/main.rs"

[[bin]]
name = "aggregation-gateway"
path = "aggregation-gateway/src/main.rs"

[[bin]]
name = "frontend-base-service"
path = "frontend-base-service/src/main.rs"

[[bin]]
name = "semen-sinapis"
path = "src/main.rs"

[features]
hydrate = ["leptos/hydrate", "thaw/hydrate", "thaw/nightly"]
ssr = [
    "dep:tracing",
    "dep:tokio",
    "dep:axum",
    "dep:tower",
    "dep:tower-http",
    "dep:leptos_axum",
    "dep:dotenv",
    "leptos/ssr",
    "leptos_meta/ssr",
    "leptos_router/ssr",
    "thaw/ssr",
    "thaw/nightly",
    "leptos-use/ssr",
    "dep:layer",
]

[dependencies]
serde_json = "*"
console_error_panic_hook = "*"
anyhow = "*"
leptos_meta = "0.7.0-rc1"
futures = "*"
wasm-bindgen = "*"
thiserror = "*"
chrono = "*"
jsonwebtoken = "*"
forwarded-header-value = "*"

serde = { version = "*", features = ["derive"] }
leptos = { version = "0.7.0-rc1", features = [
    "nightly",
    "experimental-islands",
] }
axum = { version = "*", optional = true }
leptos_axum = { version = "0.7.0-rc1", optional = true }
leptos_router = { version = "0.7.0-rc1", features = ["nightly"] }
tokio = { version = "*", features = ["rt-multi-thread"], optional = true }
tower = { version = "*", optional = true, features = ["util"] }
tower-http = { version = "*", features = ["fs"], optional = true }
tracing = { version = "*", optional = true }
uuid = { version = "*", features = ["serde", "v4"] }
cookie = { version = "*", features = ["percent-encode", "private"] }
thaw = { git = "https://github.com/thaw-ui/thaw.git", optional = true }
leptos-use = { version = "0.14.0-rc2", optional = true }
dotenv = { version = "*", optional = true }

# idgen = { path = "idgen" }
layer = { path = "layer", optional = true }
# volo-gen = { path = "volo-gen" }

[workspace.dependencies]
# dapr = "*"
volo = "*"
volo-grpc = "*"
volo-build = "*"
anyhow = "*"
async-trait = "*"
futures = "*"
pilota = "*"
mime = "*"
serde = "*"
serde_yaml = "*"
serde_json = "*"
tracing = "*"
prost-types = "*"
chrono = "*"
console_error_panic_hook = "*"
tower-service = "*"
tower-layer = "*"
tower = "*"
tower-http = "*"
wasm-bindgen = "0.2.93"
thiserror = "*"
http = "*"
jsonwebtoken = "*"
bytes = "*"
http-body = "*"
forwarded-header-value = "*"
apache_age = "*"
tokio-postgres = "*"
dotenv = "*"
sonic-rs = "*"
lazy_static = "*"
tracing-subscriber = "*"
axum = "*"
axum-macros = "*"
leptos = "0.7.0-rc1"
leptos_axum = "0.7.0-rc1"
leptos_meta = "0.7.0-rc1"
leptos_router = "0.7.0-rc1"
leptos-use = "0.14.0-rc2"
utoipa = "*"
utoipa-swagger-ui = "*"
sea-orm = "*"
tokio = "*"
argon2 = "*"
nacos-sdk = "*"
uuid = "*"
cookie = "*"
bb8 = "*"
redis = "*"
bb8-redis = "*"
pin-project = "*"
sodiumoxide = "*"

# Defines a size-optimized profile for the WASM bundle in release mode
[profile.wasm-release]
inherits = "release"
opt-level = 'z'
lto = true
codegen-units = 1
panic = "abort"

[package.metadata.leptos]
# The name used by wasm-bindgen/cargo-leptos for the JS/WASM bundle. Defaults to the crate name
output-name = "semen-sinapis"

# The site root folder is where cargo-leptos generate all output. WARNING: all content of this folder will be erased on a rebuild. Use it in your server setup.
site-root = "target/site"

# The site-root relative folder where all compiled output (JS, WASM and CSS) is written
# Defaults to pkg
site-pkg-dir = "pkg"

# [Optional] The source CSS file. If it ends with .sass or .scss then it will be compiled by dart-sass into CSS. The CSS is optimized by Lightning CSS before being written to <site-root>/<site-pkg>/app.css
style-file = "style/tailwind.css"
# Assets source dir. All files found here will be copied and synchronized to site-root.
# The assets-dir cannot have a sub directory with the same name/path as site-pkg-dir.
#
# Optional. Env: LEPTOS_ASSETS_DIR.
assets-dir = "public"

# The IP and port (ex: 127.0.0.1:3000) where the server serves the content. Use it in your server setup.
site-addr = "0.0.0.0:3008"

# The port to use for automatic reload monitoring
reload-port = 3001

# [Optional] Command to use when running end2end tests. It will run in the end2end dir.
#   [Windows] for non-WSL use "npx.cmd playwright test"
#   This binary name can be checked in Powershell with Get-Command npx
end2end-cmd = "npx playwright test"
end2end-dir = "end2end"

#  The browserlist query used for optimizing the CSS.
browserquery = "defaults"

# The environment Leptos will run in, usually either "DEV" or "PROD"
env = "DEV"

# The features to use when compiling the bin target
#
# Optional. Can be over-ridden with the command line parameter --bin-features
bin-features = ["ssr"]

# If the --no-default-features flag should be used when compiling the bin target
#
# Optional. Defaults to false.
bin-default-features = false

# The features to use when compiling the lib target
#
# Optional. Can be over-ridden with the command line parameter --lib-features
lib-features = ["hydrate"]

# If the --no-default-features flag should be used when compiling the lib target
#
# Optional. Defaults to false.
lib-default-features = false

# The profile to use for the lib target when compiling for release
#
# Optional. Defaults to "release".
lib-profile-release = "wasm-release"

bin-target = "semen-sinapis"
